package main; // Same package as main.asthra and operations.asthra

pub fn format_result(operation: string, a: f64, b: f64, result: f64) -> string {
    return operation + ": " + string(a) + " and " + string(b) + " = " + string(result);
}

pub fn validate_input(value: f64) -> bool {
    // Check if the value is finite (not NaN or infinity)
    return !is_nan(value) && !is_infinite(value);
}

fn is_nan(value: f64) -> bool {
    // NaN is the only value that is not equal to itself
    return value != value;
}

fn is_infinite(value: f64) -> bool {
    // Simple infinity check (implementation would depend on actual runtime)
    return value > 1.0e308 || value < -1.0e308;
} 