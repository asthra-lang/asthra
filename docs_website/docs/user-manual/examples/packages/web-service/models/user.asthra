package models;

pub struct User {
    pub id: i32,
    pub username: string,
    pub email: string,
    created_at: i64,        // Private field
}

pub fn create_user(username: string, email: string) -> User {
    return User {
        id: generate_user_id(),
        username: username,
        email: email,
        created_at: current_timestamp(),
    };
}

pub fn get_user_id(user: User) -> i32 {
    return user.id;
}

pub fn get_username(user: User) -> string {
    return user.username;
}

pub fn get_email(user: User) -> string {
    return user.email;
}

pub fn validate_user(user: User) -> bool {
    return user.username.len > 0 && user.email.len > 0 && contains_at_symbol(user.email);
}

fn generate_user_id() -> i32 {
    // Simplified ID generation
    return 42; // In real implementation, this would be more sophisticated
}

fn current_timestamp() -> i64 {
    // Simplified timestamp
    return 1609459200; // 2021-01-01 00:00:00 UTC
}

fn contains_at_symbol(email: string) -> bool {
    // Simplified email validation
    return email.len > 3; // Real implementation would check for '@' symbol
} 